AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  This template creates CloudWatch dashboard for a backend service.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: realworld-serverless-application-ops-dashboard
    Description: >-
      This template creates CloudWatch dashboard for the backend service.
    Author: AWS Serverless Application Repository
    SpdxLicenseId: Apache-2.0
    Labels: [github, serverless, sam]
    HomePageUrl: https://github.com/awslabs/realworld-serverless-application
    SemanticVersion: 1.0.1
    SourceCodeUrl: https://github.com/awslabs/realworld-serverless-application/tree/1.0.1
    LicenseUrl: ../../../LICENSE
    ReadmeUrl: ../../README.md

Parameters:
  Stage:
    Type: String
    Description: The stage where the application is running in, e.g., dev, prod.

Resources:
  Dashboard:
    Type: 'AWS::CloudWatch::Dashboard'
    Properties:
      DashboardBody: !Sub >
        {
          "start": "-PT6H",
          "widgets": [
            {
                "type": "metric",
                "x": 0,
                "y": 26,
                "width": 9,
                "height": 6,
                "properties": {
                    "title": "API Lambda Invocations",
                    "view": "timeSeries",
                    "stacked": false,
                    "metrics": [
                        [ "AWS/Lambda", "Invocations", "FunctionName", "{{resolve:ssm:/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionName:1}}", "Resource", "{{resolve:ssm:/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionName:1}}:live" ]
                    ],
                    "region": "${AWS::Region}",
                    "period": 60,
                    "stat": "Sum"
                    }
            },
            {
                "type": "metric",
                "x": 9,
                "y": 26,
                "width": 9,
                "height": 6,
                "properties": {
                    "metrics": [
                        [ "AWS/Lambda", "Duration", "FunctionName", "{{resolve:ssm:/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionName:1}}", "Resource", "{{resolve:ssm:/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionName:1}}:live" ],
                        [ "...", { "stat": "p50" } ]
                    ],
                    "region": "${AWS::Region}",
                    "title": "API Lambda Latency",
                    "period": 60,
                    "view": "timeSeries",
                    "stacked": false,
                    "stat": "p90"
                }
            },
            {
                "type": "metric",
                "x": 0,
                "y": 7,
                "width": 9,
                "height": 6,
                "properties": {
                    "metrics": [
                        [ "AWS/ApiGateway", "Count", "ApiName", "realworld-serverless-application-backend-${Stage}" ]
                    ],
                    "view": "timeSeries",
                    "stacked": false,
                    "region": "${AWS::Region}",
                    "stat": "Sum",
                    "period": 60,
                    "title": "API Request Count"
                }
            },
            {
                "type": "metric",
                "x": 9,
                "y": 7,
                "width": 9,
                "height": 6,
                "properties": {
                    "metrics": [
                        [ "AWS/ApiGateway", "4XXError", "ApiName", "realworld-serverless-application-backend-${Stage}" ]
                    ],
                    "view": "timeSeries",
                    "stacked": false,
                    "region": "${AWS::Region}",
                    "stat": "Sum",
                    "period": 60,
                    "title": "API 4XXError Count"
                }
            },
            {
                "type": "text",
                "x": 0,
                "y": 19,
                "width": 18,
                "height": 1,
                "properties": {
                    "markdown": "\n# API Lambda\n"
                }
            },
            {
                "type": "text",
                "x": 0,
                "y": 0,
                "width": 18,
                "height": 1,
                "properties": {
                    "markdown": "\n# API Gateway\n"
                }
            },
            {
                "type": "metric",
                "x": 0,
                "y": 13,
                "width": 9,
                "height": 6,
                "properties": {
                    "metrics": [
                        [ "AWS/ApiGateway", "Latency", "ApiName", "realworld-serverless-application-backend-${Stage}" ],
                        [ ".", "IntegrationLatency", ".", "." ]
                    ],
                    "view": "timeSeries",
                    "stacked": false,
                    "region": "${AWS::Region}",
                    "stat": "p90",
                    "period": 60,
                    "title": "API Latency p90"
                }
            },
            {
                "type": "metric",
                "x": 9,
                "y": 13,
                "width": 9,
                "height": 6,
                "properties": {
                    "metrics": [
                        [ "AWS/ApiGateway", "Latency", "ApiName", "realworld-serverless-application-backend-${Stage}" ],
                        [ ".", "IntegrationLatency", ".", "." ]
                    ],
                    "view": "timeSeries",
                    "stacked": false,
                    "region": "${AWS::Region}",
                    "stat": "p50",
                    "period": 60,
                    "title": "API Latency p50"
                }
            },
            {
                "type": "text",
                "x": 0,
                "y": 32,
                "width": 18,
                "height": 1,
                "properties": {
                    "markdown": "\n# Insights\n"
                }
            },
            {
                "type": "log",
                "x": 0,
                "y": 51,
                "width": 18,
                "height": 6,
                "properties": {
                    "query": "SOURCE '{{resolve:ssm:/applications/apprepo/${Stage}/apigateway/ApplicationsApi/AccessLog/LogGroupName:1}}' | parse '* * [*] \"* * *\" * * * * * * \"*\"' as ip, userId, dateTimeString, httpVerb, url, protocol, statusCode, requestId, awsEndpointRequestId, xrayTraceId, responseLatency, integrationLatency, errorMessage\n| sort responseLatency desc\n| limit 10",
                    "region": "${AWS::Region}",
                    "stacked": false,
                    "view": "table",
                    "title": "Top 10 API Latency Requests"
                }
            },
            {
                "type": "log",
                "x": 0,
                "y": 33,
                "width": 18,
                "height": 6,
                "properties": {
                    "query": "SOURCE '{{resolve:ssm:/applications/apprepo/${Stage}/apigateway/ApplicationsApi/AccessLog/LogGroupName:1}}' | parse '* * [*] \"* * *\" * * * * * * \"*\"' as ip, userId, dateTimeString, httpVerb, url, protocol, statusCode, requestId, awsEndpointRequestId, xrayTraceId, responseLatency, integrationLatency, errorMessage\n| stats count() as count by userId\n| sort by count desc\n| limit 10",
                    "region": "${AWS::Region}",
                    "stacked": false,
                    "view": "table",
                    "title": "Top 10 Customers by Request Count"
                }
            },
            {
                "type": "log",
                "x": 0,
                "y": 45,
                "width": 18,
                "height": 6,
                "properties": {
                    "query": "SOURCE '{{resolve:ssm:/applications/apprepo/${Stage}/apigateway/ApplicationsApi/AccessLog/LogGroupName:1}}' | parse '* * [*] \"* * *\" * * * * * * \"*\"' as ip, userId, dateTimeString, httpVerb, url, protocol, statusCode, requestId, awsEndpointRequestId, xrayTraceId, responseLatency, integrationLatency, errorMessage\n| filter statusCode like /4\\d\\d/\n| stats count() as count by statusCode\n| sort by count desc\n| limit 10",
                    "region": "${AWS::Region}",
                    "stacked": false,
                    "view": "table",
                    "title": "Top 10 API 4xx Errors "
                }
            },
            {
                "type": "log",
                "x": 0,
                "y": 39,
                "width": 18,
                "height": 6,
                "properties": {
                    "query": "SOURCE '{{resolve:ssm:/applications/apprepo/${Stage}/apigateway/ApplicationsApi/AccessLog/LogGroupName:1}}' | parse '* * [*] \"* * *\" * * * * * * \"*\"' as ip, userId, dateTimeString, httpVerb, url, protocol, statusCode, requestId, awsEndpointRequestId, xrayTraceId, responseLatency, integrationLatency, errorMessage\n| filter statusCode like /5\\d\\d/\n| stats count() as count by errorMessage\n| sort by count desc\n| limit 10",
                    "region": "${AWS::Region}",
                    "stacked": false,
                    "view": "table",
                    "title": "Top 10 API 5xx Errors"
                }
            },
            {
                "type": "metric",
                "x": 0,
                "y": 1,
                "width": 18,
                "height": 6,
                "properties": {
                    "metrics": [
                        [ { "expression": "100 - 100 * errorRate", "label": "Availability (%)", "id": "availability", "yAxis": "right" } ],
                        [ "AWS/ApiGateway", "5XXError", "ApiName", "realworld-serverless-application-backend-${Stage}", { "id": "errorRate", "visible": false, "label": "5XXErrorRate" } ],
                        [ "...", { "id": "errorCount", "stat": "Sum", "label": "5XXError" } ]
                    ],
                    "view": "timeSeries",
                    "stacked": false,
                    "region": "${AWS::Region}",
                    "stat": "Sum",
                    "period": 60,
                    "yAxis": {
                        "right": {
                            "showUnits": true,
                            "label": "%",
                            "max": 100
                        },
                        "left": {
                            "showUnits": true,
                            "label": ""
                        }
                    },
                    "title": "API 5XXError Count and Availability (%)"
                }
            },
            {
                "type": "metric",
                "x": 0,
                "y": 20,
                "width": 18,
                "height": 6,
                "properties": {
                    "metrics": [
                        [ "AWS/Lambda", "Errors", "FunctionName", "{{resolve:ssm:/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionName:1}}", "Resource", "{{resolve:ssm:/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionName:1}}:live", { "id": "errors", "color": "#d13212" } ],
                        [ ".", "Invocations", ".", ".", ".", ".", { "id": "invocations", "visible": false } ],
                        [ { "expression": "100 - 100 * errors / invocations", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "period": 60 } ]
                    ],
                    "region": "${AWS::Region}",
                    "title": "API Lambda Error Count and Success Rate (%)",
                    "yAxis": {
                        "right": {
                            "max": 100
                        }
                    },
                    "view": "timeSeries",
                    "stacked": false,
                    "period": 60,
                    "stat": "Sum"
                }
            },
            {
                "type": "log",
                "x": 0,
                "y": 39,
                "width": 18,
                "height": 6,
                "properties": {
                    "query": "SOURCE '{{resolve:ssm:/applications/apprepo/${Stage}/apigateway/ApplicationsApi/AccessLog/LogGroupName:1}}' | parse '* * [*] \"* * *\" * * * * * * \"*\"' as ip, userId, dateTimeString, httpVerb, url, protocol, statusCode, requestId, awsEndpointRequestId, xrayTraceId, responseLatency, integrationLatency, errorMessage\n| filter statusCode like /5\\d\\d/\n| stats count(statusCode) as errorCount by userId, statusCode\n| sort errorCount desc\n| limit 10",
                    "region": "${AWS::Region}",
                    "stacked": false,
                    "view": "table",
                    "title": "Top 10 Customers Impacted by API 5xx"
                }
            }
          ]   
        }   

  # Storing resources names to SSM
  DashboardName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/apprepo/${Stage}/cloudwatch/DashboardName"
      Type: "String"
      Value: !Ref Dashboard
      Description: "Dashboard name"
