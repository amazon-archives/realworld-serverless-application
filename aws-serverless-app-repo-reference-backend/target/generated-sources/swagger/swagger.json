{
  "swagger" : "2.0",
  "info" : {
    "description" : "Reference implementation of AWS Serverless Application Repository",
    "version" : "2019-10-13"
  },
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/applications" : {
      "get" : {
        "operationId" : "ListApplications",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nextToken",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "maxItems",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "maximum" : 100,
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/ApplicationList"
            }
          },
          "400" : {
            "schema" : {
              "$ref" : "#/definitions/BadRequestException"
            }
          },
          "401" : {
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedException"
            }
          },
          "429" : {
            "schema" : {
              "$ref" : "#/definitions/TooManyRequestsException"
            }
          },
          "500" : {
            "schema" : {
              "$ref" : "#/definitions/InternalServerErrorException"
            }
          }
        },
        "security" : [ {
          "cognitoAuthorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : {
            "Fn::Sub" : "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations"
          },
          "httpMethod" : "POST",
          "type" : "aws_proxy",
          "passthroughBehavior" : "never"
        }
      },
      "post" : {
        "operationId" : "CreateApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateApplicationInput",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateApplicationInput"
          }
        } ],
        "responses" : {
          "201" : {
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "schema" : {
              "$ref" : "#/definitions/BadRequestException"
            }
          },
          "401" : {
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedException"
            }
          },
          "409" : {
            "schema" : {
              "$ref" : "#/definitions/ConflictException"
            }
          },
          "429" : {
            "schema" : {
              "$ref" : "#/definitions/TooManyRequestsException"
            }
          },
          "500" : {
            "schema" : {
              "$ref" : "#/definitions/InternalServerErrorException"
            }
          }
        },
        "security" : [ {
          "cognitoAuthorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : {
            "Fn::Sub" : "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations"
          },
          "httpMethod" : "POST",
          "type" : "aws_proxy",
          "passthroughBehavior" : "never"
        }
      }
    },
    "/applications/{applicationId}" : {
      "get" : {
        "operationId" : "GetApplication",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{3,128}$"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "schema" : {
              "$ref" : "#/definitions/BadRequestException"
            }
          },
          "401" : {
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedException"
            }
          },
          "404" : {
            "schema" : {
              "$ref" : "#/definitions/NotFoundException"
            }
          },
          "429" : {
            "schema" : {
              "$ref" : "#/definitions/TooManyRequestsException"
            }
          },
          "500" : {
            "schema" : {
              "$ref" : "#/definitions/InternalServerErrorException"
            }
          }
        },
        "security" : [ {
          "cognitoAuthorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : {
            "Fn::Sub" : "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations"
          },
          "httpMethod" : "POST",
          "type" : "aws_proxy",
          "passthroughBehavior" : "never"
        }
      },
      "delete" : {
        "operationId" : "DeleteApplication",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{3,128}$"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete an application"
          },
          "400" : {
            "schema" : {
              "$ref" : "#/definitions/BadRequestException"
            }
          },
          "401" : {
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedException"
            }
          },
          "404" : {
            "schema" : {
              "$ref" : "#/definitions/NotFoundException"
            }
          },
          "409" : {
            "schema" : {
              "$ref" : "#/definitions/ConflictException"
            }
          },
          "429" : {
            "schema" : {
              "$ref" : "#/definitions/TooManyRequestsException"
            }
          },
          "500" : {
            "schema" : {
              "$ref" : "#/definitions/InternalServerErrorException"
            }
          }
        },
        "security" : [ {
          "cognitoAuthorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : {
            "Fn::Sub" : "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations"
          },
          "httpMethod" : "POST",
          "type" : "aws_proxy",
          "passthroughBehavior" : "never"
        }
      },
      "patch" : {
        "operationId" : "UpdateApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{3,128}$"
        }, {
          "in" : "body",
          "name" : "UpdateApplicationInput",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateApplicationInput"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "schema" : {
              "$ref" : "#/definitions/BadRequestException"
            }
          },
          "401" : {
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedException"
            }
          },
          "404" : {
            "schema" : {
              "$ref" : "#/definitions/NotFoundException"
            }
          },
          "409" : {
            "schema" : {
              "$ref" : "#/definitions/ConflictException"
            }
          },
          "429" : {
            "schema" : {
              "$ref" : "#/definitions/TooManyRequestsException"
            }
          },
          "500" : {
            "schema" : {
              "$ref" : "#/definitions/InternalServerErrorException"
            }
          }
        },
        "security" : [ {
          "cognitoAuthorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : {
            "Fn::Sub" : "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}:live/invocations"
          },
          "httpMethod" : "POST",
          "type" : "aws_proxy",
          "passthroughBehavior" : "never"
        }
      }
    }
  },
  "securityDefinitions" : {
    "cognitoAuthorizer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "cognito_user_pools",
      "x-amazon-apigateway-authorizer" : {
        "providerARNs" : [ {
          "Fn::GetAtt" : "ApplicationsApiUserPool.Arn"
        } ],
        "type" : "cognito_user_pools"
      }
    }
  },
  "definitions" : {
    "BadRequestException" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "UnauthorizedException" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "NotFoundException" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "ConflictException" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "TooManyRequestsException" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "InternalServerErrorException" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "CreateApplicationInput" : {
      "type" : "object",
      "required" : [ "applicationId", "author", "description" ],
      "properties" : {
        "applicationId" : {
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{3,128}$"
        },
        "description" : {
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{3,128}$"
        },
        "author" : {
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{1,128}$"
        },
        "homePageUrl" : {
          "type" : "string",
          "pattern" : "^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$"
        }
      }
    },
    "UpdateApplicationInput" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{1,128}$"
        },
        "author" : {
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\-]{1,128}$"
        },
        "homePageUrl" : {
          "type" : "string",
          "pattern" : "^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$"
        }
      }
    },
    "Application" : {
      "type" : "object",
      "required" : [ "applicationId", "author", "description" ],
      "properties" : {
        "applicationId" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "author" : {
          "type" : "string"
        },
        "creationTime" : {
          "type" : "string"
        },
        "homePageUrl" : {
          "type" : "string"
        }
      }
    },
    "ApplicationSummary" : {
      "type" : "object",
      "properties" : {
        "applicationId" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "creationTime" : {
          "type" : "string"
        }
      }
    },
    "ApplicationList" : {
      "type" : "object",
      "properties" : {
        "applications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationSummary"
          }
        },
        "nextToken" : {
          "type" : "string"
        }
      }
    }
  },
  "x-amazon-apigateway-request-validators" : {
    "all" : {
      "validateRequestBody" : true,
      "validateRequestParameters" : true
    }
  },
  "x-amazon-apigateway-request-validator" : "all",
  "x-amazon-apigateway-gateway-responses" : {
    "BAD_REQUEST_BODY" : {
      "responseTemplates" : {
        "application/json" : "{\"errorCode\": \"BadRequestBody\", \"message\": \"$context.error.validationErrorString\"}"
      }
    }
  }
}